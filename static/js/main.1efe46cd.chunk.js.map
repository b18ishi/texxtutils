{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","type","role","word","lowerr","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","color","onClick","togglemode","htmlFor","TextForm","setupAlert","text","setText","useState","style","heading","value","onChange","event","target","backgroundColor","rows","convertUpcase","convertlocase","handlecopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","newtext","split","join","cleartext","length","toFixed","prototype","PropTypes","string","isRequired","defaultProps","App","setMode","setColor","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.1efe46cd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n    const lowerr = word.toLowerCase();\r\n    return lowerr.charAt(0).toUpperCase() + lowerr.slice(1);\r\n    }\r\n\r\n  return (\r\n\r\n\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n  \r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n//when we use link we remove 'a' and then use 'Link && we removr 'href' and use 'to'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `} >\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.color}`}>\r\n  <input className=\"form-check-input \" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.prototype ={\r\n    title: PropTypes.string.isRequired,\r\n    // agar props default na ho aur app.js m bhi define krna bhul gye toh error aayega\r\n    aboutText: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    title: \"set title here\",\r\n    aboutText: \"About\",\r\n}\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props, setupAlert) {\r\n  \r\n  const handlecopy =() =>{\r\n    var text =document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.setupAlert(\"Text has been copied\", \"warning\")\r\n  }\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newtext = text.split(/[ ]+/);\r\n    setText(newtext.join(\" \"));\r\n    props.setupAlert(\"Extra apaces is removed\", \"warning\")\r\n  }\r\n\r\n  const convertUpcase = ()=>{\r\n    setText(text.toUpperCase());\r\n    props.setupAlert(\"Text has been converted to Upper case\", \"warning\")\r\n  }\r\n  const convertlocase = ()=>{\r\n\r\n    setText(text.toLowerCase());\r\n    props.setupAlert(\"Text has been converted to Lower case\", \"warning\")\r\n    // console.log(\"on click executed\");\r\n  }\r\n  \r\n  \r\n  const cleartext = ()=>{\r\n    setText(\"\");\r\n    props.setupAlert(\"Text has been cleared\", \"warning\")\r\n    // console.log(\"on click executed\");\r\n  }\r\n  \r\n  const handleOnChange = (event)=>{\r\n    // console.log(\"on change executed\");\r\n    setText(event.target.value);\r\n  }\r\n  const [text, setText] = useState(\"Enter the text here\");\r\n\r\n  return (\r\n    <>\r\n\r\n   <div className='container'>\r\n     <h2 style={{color: props.mode==='light'?'black':'white'}}>{props.heading}</h2>\r\n     <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text}  onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'grey', color: props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n     </div >\r\n     <button className=\"btn btn-secondary mx-1 \"  onClick={convertUpcase}>Convert to uppercase</button>\r\n     <button className=\"btn btn-secondary mx-1 \"  onClick={convertlocase}>Convert to lowercase</button>\r\n     <button className=\"btn btn-secondary mx-1 \"  onClick={handlecopy}>Copy</button>\r\n     <button className=\"btn btn-secondary mx-1 \"  onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n     <button className=\"btn btn-secondary mx-1\" onClick={cleartext}>Clear</button>\r\n   </div>\r\n\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <h1 >Your Text Summary </h1>\r\n      <p>{text.split(\" \").length} words and {text.length} characters are present in your text</p>\r\n      <p>{(.008*text.split(\" \").length).toFixed(2)} min reads</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import Alert from \"./components/Alert\";\nimport React from \"react\";\nimport \"./App.css\";\n// import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n// we are removing routing because it does not act well in github and there is nothing important in about\n \n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [color, setColor] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const setupAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },2000)\n\n  }\n  const togglemode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      setColor('light');\n      document.body.style.backgroundColor = '#042743';\n      setupAlert(\"dark mode has been enabled\", \"success\")\n      document.title='Textutils - dark mode';\n\n      //To change the title every second to attract user attraction\n      // setInterval(()=>{\n      //   document.title='Textutils is Amazing application';\n      // },2000);\n      // setInterval(()=>{\n      //   document.title='Install Textutils Now';\n      // },3000);\n\n    }\n    else{\n      setMode('light');\n      setColor('dark');\n      document.body.style.backgroundColor = 'white';\n      setupAlert(\"Light mode has been enabled\", \"danger\")\n      document.title= 'Textutils - light mode';\n    }\n    }\n  \n  return (\n    <>\n    {/* <Router>  */}\n      <Navbar title=\"textutils\" mode={mode} color={color} togglemode = {togglemode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* use exact before path becaus without it it matches prtial component */}\n      {/* <Switch>\n        \n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <TextForm setupAlert={setupAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n        </Switch>\n       */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}